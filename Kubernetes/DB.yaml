# First we need to configure The PresistenceVolumeClaimer (PVC) for the database
# This is the volume that will be used to store the database data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: mysql
    tier: database-mysql
spec:
  accessModes:
    - ReadWriteOnce # This means that the volume can be mounted as read-write by a single node
  resources:
    requests:
      storage: 1Gi # This is the size of the volume
---
# Now we need to configure the deployment for the database server
# This is the deployment that will be used to deploy the database server to the cluster
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql # This is the label of the deployment
    tier: database-mysql
spec:
  selector:
    matchLabels:
      app: mysql # This is selector for where the pod will be deployed
      tier: database-mysql
  replicas: 1
  template: # This is the pod that will be created
    metadata:
      labels:
        app: mysql # This is the label of the pod that will be created
        tier: database-mysql
    spec:
      containers: # This is the container that will be created
        - name: mysql-container
          image: redaroshdy/dbimage
          env: # This is where we will pass the environment variables to the container
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "tripscehduler"
            - name: MYSQL_TCP_PORT
              value: "3306"
          ports: # This is where we will expose the port of the container to the outside world
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim # This is the name of the PVC that we created earlier
---
# Now we need to configure the service for the database server
# This is the service that will be used to expose the database server to the outside world
apiVersion: v1
kind: Service
metadata:
  name: mysql-service #The DNS name of the service will be mysql-service.default.svc.cluster.local
  labels:
    app: mysql # This is the label of the service
    tier: database-mysql
spec:
  ports:
    - port: 3306 # This is the port that the service will listen on inside the cluster
      targetPort: 3306 # This is the port that the service will be exposed on outside the cluster
  selector:
    app: mysql # This is the label of the deployment that we created earlier
    tier: database-mysql
